File checker features


This is the list of what we need to add to the file checker to make it useful for the project

	-Linux compliance
	-Checking the hash value of a file quickly with either sha1 or sha256 to make sure it doesn't already exist 
	-Tack option to only list the files that are missing from the destination directory 
	-Option to write the list to a file
	-Option to read a list from a file to be copied
	-Option to read log and start over on last file being copied in case of failure
	-Option to do a quiet backup
	-Option to copy the files over in the same folder structure that it has in the source folder
	-Ability to show a tree of the current source and destination files and folders and output them in a similar format to tree command
	-Ability to filter the files for a specific type of file and only copy those over


To do: 
> add a MD5/SHA-1 hash checker to see if the copied files are the same file or to see if the files are the same before coppying
> add persistence through a temp file that shows the files being copied and that has been copied in case of unexpected shutdowns
> show the persistence file that will show any possibly uncoipied files and ask if you want to proceed on run...possibly a status run
> add multi threading to copy multiple files at a time
> add a user interface that shows the file changes in a git type of way
> add some kind of a service based automation to perform scheduled backups
> display the list of files that are going to be copied and ask permissions, maybe do a -y type of system
> add the ability to copy files in linux or windows by choosing the copy method
> add a option switch that will allow future expandability
    -y yes copy all of the files on ask pronpt
    -r replace the files that are in the destination with the current files from source
    -b backup the source to the destination by creating a copy folder that will be named <source-date>
    -1 do a SHA-1 checksum to determine if the files in the source are the same as in the destination
    -5 do a MD5 checksum to detiermine if the files in the source are the same as in the destination
    -256 do a SHA-256 checksum to determine if the files in the source are the same as in the destination
    -t time stamp everthing in the destination to show that it is up to date --touch
    -ext only copy files of a certain extention type
    -log log status messages into a log file with name <source-dest-date>
    -robo use robocopy
    -cp us cp